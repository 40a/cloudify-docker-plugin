##################################################################################
# Cloudify Docker built in types and plugins definitions.
##################################################################################

plugins:
  docker:
    executor: host_agent
    source: https://github.com/cloudify-cosmo/cloudify-docker-plugin/archive/1.2m5.zip

node_types:

  cloudify.docker.Container:
    derived_from: cloudify.nodes.Root
    properties:
      image:
        description: >
          A dict describing a docker image. To import an image from a tarball
          use the src key. The value will be an absolute path or URL. If pulling
          an image from docker hub, do not use src. The key is repository. The value is that
          repository name. You may additionally specify the tag, if none is given,
          latest is assumed.
        default: {}
      name:
        description: >
          The name of the Docker container. This will also be the host name in Docker
          host config.
        type: string
        default: ''
      use_external_resource:
        description: Whether the container already exists or not.
        type: boolean
        default: false
      ports:
        description: >
          Key value pairs of port bindings as provided to the start function.
          The create function is designed to get only the keys for assignment
          of the ports parameter.
        default: {}
      params:
        description: >
          Any parameters in the create_container or start functions that are not mentioned here.
          Additionally, you may pass a list of processes to wait for in the container before
          finishing the start operation. These will be matched against processes in the output
          of the Docker top command.
        default: {}
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: docker.docker_plugin.tasks.create_container
        start:
          implementation: docker.docker_plugin.tasks.start
          inputs:
            retry_interval:
              description: >
                Before finishing start checks to see that all processes
                on the container are ready. This is the interval between
                checks.
              type: integer
              default: 1
        stop:
          implementation: docker.docker_plugin.tasks.stop
          inputs:
            retry_interval:
              description: >
                If Exited is not in the container status, then the plugin will retry. This is
                the number of seconds between retries.
              type: integer
              default: 10
            timeout:
              description: >
                Timeout in seconds to wait for the container to stop before sending a SIGKILL
              type: integer
              default: 10
        delete:
          implementation: docker.docker_plugin.tasks.remove_container
          inputs:
            v:
              description: Remove the volumes associated with the container
              type: boolean
              default: false
            link:
              description: Remove the specified link and not the underlying container
              type: boolean
              default: false
            force: 
              description: Force the removal of a running container (uses SIGKILL)
              type: boolean
              default: false
